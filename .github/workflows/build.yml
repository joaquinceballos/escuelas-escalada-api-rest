name: test & build & deploy
on:
  pull_request:
    branches: [ develop ]  
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  build-and-push-image:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}      
    - name: Create a GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
    - name: Build with Maven
      run: mvn -B clean package -DskipTests        
    - name: Build container image
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: ${{ github.repository }}/api-image
        tags: latest,${{ steps.tag_version.outputs.new_tag }}
  docker-run:
    runs-on: ubuntu-latest
    needs: [build-and-push-image]
    steps:    
    - name: ssh docker
      uses: fifsky/ssh-action@master
      with:
        command: |
          cd app/
          echo docker login
          sudo docker login https://docker.pkg.github.com -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          echo docker pull
          sudo docker pull docker.pkg.github.com/joaquinceballos/escuelas-escalada-api-rest/api-image:latest
          echo docker stop container
          sudo docker container stop contenedor-api-escuelas-dev
          echo docker remove container
          sudo docker container rm contenedor-api-escuelas-dev
          echo docker run
          sudo docker run -p 8080:8080 -e SPRING_PROFILES_ACTIVE=dev -e SPRING_DATASOURCE_URL=${{secrets.DEV_DATABASE_URL}} -e SPRING_DATASOURCE_USERNAME=${{secrets.DEV_DATABASE_USERNAME}} -e SPRING_DATASOURCE_PASSWORD=${{secrets.DEV_DATABASE_PASSWORD}} -e SERVER_PORT=8080 -e SPRING_SECURITY_JWT_SECRET=${{secrets.JWT_SECRET}} --name contenedor-api-escuelas-dev -d docker.pkg.github.com/joaquinceballos/escuelas-escalada-api-rest/api-image &
          echo fin
        host: ${{ secrets.API_HOST }}
        user: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        args: "-tt -vvv"         