name: test & build & deploy
on:
  push:
    branches: [ develop, feature-ci ]
  pull_request:
    branches: [ develop, main ]  
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar     
  deploy:
    name: deploy
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven
        run: mvn -B clean package -DskipTests
      - name: borrar jar
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd app/api-escuelas
            [ -e *.jar ] && sudo rm *.jar && echo borrado
            echo fin
          host: ${{ secrets.API_HOST }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}        
      - name: copiar jar
        uses: garygrossgarten/github-action-scp@release
        with:
          local: target/apiEscuelasEscalada.jar
          remote: app/api-escuelas/apiEscuelasEscalada.jar
          host: ${{ secrets.API_HOST }}
          username: ${{ secrets.SSH_USER }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}       
      - name: docker rebuild
        uses: fifsky/ssh-action@master
        with:
          command: |
            sudo docker container stop contenedor-api-escuelas
            sudo docker container rm contenedor-api-escuelas
            cd app/api-escuelas
            ./rebuild-imagen.sh
            sudo docker run -p 443:443 -e SPRING_PROFILES_ACTIVE=prod -e SPRING_DATASOURCE_URL=jdbc:mysql://${{secrets.PROD_DATABASE_HOST}}:3306/escuelas -e SPRING_DATASOURCE_USERNAME=${{secrets.PROD_DATABASE_USERNAME}} -e SPRING_DATASOURCE_PASSWORD=${{secrets.PROD_DATABASE_PASSWORD}} -e SERVER_SSL_ENABLED=true -e SERVER_SSL_KEYSTORE=keystore.p12 -e SERVER_SSL_KEYSTOREPASSWORD= -e SERVER_SSL_KEYSTORETYPE=PKCS12 -e SERVER_SSL_KEYALIAS=tomcat -e SERVER_PORT=443 -e SPRING_SECURITY_JWT_SECRET=${{secrets.JWT_SECRET}} --name contenedor-api-escuelas imagen-escuelas-api > salida.log &
            echo fin
          host: ${{ secrets.API_HOST }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          args: "-tt -vvv"          